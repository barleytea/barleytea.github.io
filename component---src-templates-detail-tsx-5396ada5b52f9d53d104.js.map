{"version":3,"file":"component---src-templates-detail-tsx-5396ada5b52f9d53d104.js","mappings":"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","sources":["webpack://barleytea.github.io/./src/components/main-column.tsx","webpack://barleytea.github.io/./src/components/contents-header.tsx","webpack://barleytea.github.io/./src/components/next-previous-item.tsx","webpack://barleytea.github.io/./src/components/next-previous.tsx","webpack://barleytea.github.io/./src/components/related-post-list-item.tsx","webpack://barleytea.github.io/./src/components/related-post-list.tsx","webpack://barleytea.github.io/./src/components/side-column.tsx","webpack://barleytea.github.io/./src/templates/detail.tsx"],"sourcesContent":["import { ComponentType } from 'react'\n\ninterface Props {\n  detailPage: NonNullable<Queries.DetailPageQuery['markdownRemark']>\n}\n\nexport const MainColumn: ComponentType<Props> = ({ detailPage }) => {\n  return (\n    <div className=\"text-[color:var(--text-color)]\">\n      <article\n        dangerouslySetInnerHTML={{\n          __html: detailPage.html || '',\n        }}\n        className=\"markdown\"\n      ></article>\n    </div>\n  )\n}\n","import { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\nimport { TagList } from './tag-list'\n\nexport const ContentsHeader: ComponentType<{\n  markdownMeta: NonNullable<\n    Queries.DetailPageQuery['markdownRemark']\n  >['frontmatter']\n}> = ({ markdownMeta }) => {\n  if (\n    !markdownMeta ||\n    !markdownMeta.title ||\n    !markdownMeta.created ||\n    !markdownMeta.eyecatcher ||\n    !markdownMeta.tags\n  ) {\n    throw new Error('Invalid node')\n  }\n\n  const image = getImage(markdownMeta.eyecatcher.childImageSharp)\n  if (!image) {\n    throw new Error('No image')\n  }\n\n  return (\n    <div className=\"markdown\">\n      <h1 className=\"break-all\">{markdownMeta.title}</h1>\n      <div className=\"my-2\">\n        <TagList tags={markdownMeta.tags} />\n      </div>\n      <p className=\"text-sm\">\n        {markdownMeta.created}\n      </p>\n      <div className=\"mb-3\">\n        <GatsbyImage image={image} alt=\"thumbnail\" />\n      </div>\n    </div>\n  )\n}\n","import { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\n\ninterface Props {\n  post:\n    | NonNullable<\n        Queries.NextAndPreviousQuery['allMarkdownRemark']['edges'][number]['next']\n      >\n    | NonNullable<\n        Queries.NextAndPreviousQuery['allMarkdownRemark']['edges'][number]['previous']\n      >\n  direction: 'right' | 'left'\n}\n\nexport const NextAndPreviousItem: ComponentType<Props> = ({\n  post,\n  direction,\n}) => {\n  if (!post.frontmatter?.path || !post.frontmatter?.title) {\n    throw new Error()\n  }\n\n  return (\n    <Link\n      to={post.frontmatter.path}\n      className=\"text-[color:var(--text-color)] hover:bg-[color:var(--primary-color)]\"\n    >\n      <div className=\"flex\">\n        {direction === 'left' ? (\n          <div className=\"h-24 w-56 border border-solid p-3 text-[color:var(--text-color)]\">\n            <span className=\"line-clamp-3 whitespace-pre-wrap break-words text-[color:var(--text-color)]\">\n              {'<<'} {post.frontmatter.title}\n            </span>\n          </div>\n        ) : (\n          <div className=\"h-24 w-56 border border-solid p-3 text-[color:var(--text-color)]\">\n            <span className=\"line-clamp-3 whitespace-pre-wrap break-words text-[color:var(--text-color)]\">\n              {'>>'} {post.frontmatter.title}\n            </span>\n          </div>\n        )}\n      </div>\n    </Link>\n  )\n}\n","import { ComponentType } from 'react'\nimport { NextAndPreviousItem } from './next-previous-item'\n\ninterface NextAndPreviousEdges {\n  next: Queries.NextAndPreviousQuery['allMarkdownRemark']['edges'][number]['next']\n  prev: Queries.NextAndPreviousQuery['allMarkdownRemark']['edges'][number]['previous']\n}\n\nexport const NextAndPrevious: ComponentType<NextAndPreviousEdges> = ({\n  next,\n  prev,\n}) => {\n  return (\n    <div className=\"flex justify-between max-[480px]:flex-col\">\n      {prev ? (\n        <NextAndPreviousItem post={prev} direction=\"left\" />\n      ) : (\n        <div></div>\n      )}\n      {next ? (\n        <NextAndPreviousItem post={next} direction=\"right\" />\n      ) : (\n        <div></div>\n      )}\n    </div>\n  )\n}\n","import { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\n\ninterface RelatedPostListItemProps {\n  post: Queries.DetailPageQuery['tags']['nodes'][number]\n}\n\nexport const RelatedPostListItem: ComponentType<RelatedPostListItemProps> = ({\n  post,\n}) => {\n  if (\n    !post.frontmatter?.path ||\n    !post.frontmatter?.title ||\n    !post.frontmatter?.eyecatcher\n  ) {\n    throw new Error('Invalid node')\n  }\n\n  const image = getImage(post.frontmatter.eyecatcher.childImageSharp)\n  if (!image) {\n    throw new Error('No image')\n  }\n\n  return (\n    <li\n      key={post.frontmatter.path}\n      className=\"border-b-2 border-solid border-[color:var(--text-color)]\"\n    >\n      <Link to={post.frontmatter.path}>\n        <div className=\"flex h-full text-[color:var(--text-color)] hover:bg-[color:var(--text-color)] hover:text-[color:var(--base-color)]\">\n          <GatsbyImage image={image} alt=\"thumbnail\" className=\"shrink-0\" />\n          <div className=\"w-full px-2 py-1\">\n            <span className=\"break-all\">{post.frontmatter.title}</span>\n          </div>\n        </div>\n      </Link>\n    </li>\n  )\n}\n","import { ComponentType } from 'react'\nimport { RelatedPostListItem } from './related-post-list-item'\n\ninterface RelatedPostListProps {\n  posts: Queries.DetailPageQuery['tags']['nodes']\n}\n\nexport const RelatedPostList: ComponentType<RelatedPostListProps> = ({\n  posts,\n}) => {\n  return (\n    <ul className=\"rounded border-solid border-[color:var(--text-color)] p-0\">\n      {posts.map((p) => (\n        <RelatedPostListItem key={p.frontmatter?.path} post={p} />\n      ))}\n    </ul>\n  )\n}\n","import { ComponentType } from 'react'\nimport { RelatedPostList } from './related-post-list'\n\ninterface Props {\n  tags: Queries.DetailPageQuery['tags']['nodes']\n}\n\nexport const SideColumn: ComponentType<Props> = ({ tags }) => {\n  return (\n    <div>\n      <section className=\"mb-12\">\n        <h2 className=\"mb-4 text-xl text-[color:var(--text-color)]\">\n          Related Posts\n        </h2>\n        <RelatedPostList posts={tags} />\n      </section>\n    </div>\n  )\n}\n","import { HeadProps, PageProps, graphql } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { DetailPageContext } from '../../gatsby-node'\nimport { Layout } from '../components/layout'\nimport { MainColumn } from '../components/main-column'\nimport { ContentsHeader } from '../components/contents-header'\nimport { NextAndPrevious } from '../components/next-previous'\nimport { SideColumn } from '../components/side-column'\nimport SEO from '../components/seo'\nimport { getSrc } from 'gatsby-plugin-image'\n\ninterface DetailPageContextWithCategories extends DetailPageContext {\n  categories: string[]\n}\n\ninterface DetailPageFrontmatter {\n  path: string | null\n  title: string | null\n  created: string | null\n  tags: readonly (string | null)[] | null\n  category: string | null\n  eyecatcher: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    } | null\n  } | null\n}\n\ninterface DetailPageData {\n  markdownRemark: {\n    id: string\n    html: string\n    frontmatter: DetailPageFrontmatter\n  } | null\n  tags: {\n    nodes: {\n      frontmatter: {\n        path: string | null\n        title: string | null\n        tags: readonly (string | null)[] | null\n        eyecatcher: {\n          childImageSharp: {\n            gatsbyImageData: IGatsbyImageData\n          } | null\n        } | null\n      } | null\n    }[]\n  }\n}\n\nconst RootBlogList = ({\n  data,\n  pageContext,\n}: PageProps<DetailPageData, DetailPageContextWithCategories>) => {\n  console.log('Current page data:', data.markdownRemark)\n  console.log('Related posts:', data.tags.nodes)\n\n  if (!data.markdownRemark) {\n    throw new Error('MarkdownRemark shouled be provided')\n  }\n\n  const currentTags = data.markdownRemark.frontmatter.tags || []\n  console.log('Current tags:', currentTags)\n  \n  const postsRelatedToTag = data.tags.nodes.filter(node => {\n    if (!node.frontmatter?.tags) return false\n    const hasMatchingTag = node.frontmatter.tags.some(tag => tag && currentTags.includes(tag))\n    console.log('Checking post:', node.frontmatter.title, 'tags:', node.frontmatter.tags, 'matches:', hasMatchingTag)\n    return hasMatchingTag\n  })\n  \n  const displaySideMenu = postsRelatedToTag.length > 0\n  const sideColumnClassName = displaySideMenu\n    ? `invisible min-[480px]:visible`\n    : `invisible`\n\n  return (\n    <Layout>\n      <div>\n        <ContentsHeader\n          markdownMeta={data.markdownRemark.frontmatter}\n        ></ContentsHeader>\n        <div className=\"grid min-[480px]:gap-x-6 min-[480px]:grid-cols-[70%_30%] max-[480px]:grid-cols-[100%]\" >\n          <MainColumn detailPage={data.markdownRemark} />\n          <aside className={sideColumnClassName}>\n            <SideColumn tags={postsRelatedToTag}></SideColumn>\n          </aside>\n          <section className=\"mt-4\">\n            <NextAndPrevious next={pageContext.next} prev={pageContext.prev} />\n          </section>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default RootBlogList\n\nexport const details = graphql`\n  query DetailPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        path\n        title\n        created\n        tags\n        category\n        eyecatcher {\n          childImageSharp {\n            gatsbyImageData(width: 300, height: 300, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n    tags: allMarkdownRemark(\n      filter: { \n        id: { ne: $id }\n        frontmatter: { \n          draft: { ne: true }\n        }\n      }\n      limit: 10\n      sort: { frontmatter: { created: DESC } }\n    ) {\n      nodes {\n        frontmatter {\n          path\n          title\n          tags\n          eyecatcher {\n            childImageSharp {\n              gatsbyImageData(width: 120, height: 90)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const Head = ({ data }: HeadProps<DetailPageData>) => {\n  if (\n    !data.markdownRemark?.frontmatter?.title ||\n    !data.markdownRemark?.frontmatter?.created ||\n    !data.markdownRemark?.frontmatter?.eyecatcher?.childImageSharp\n  ) {\n    throw new Error('Insufficient details')\n  }\n\n  const eyecatcherPath = getSrc(\n    data.markdownRemark.frontmatter.eyecatcher.childImageSharp\n  )\n  return (\n    <SEO\n      title={data.markdownRemark.frontmatter.title}\n      path={`${data.markdownRemark.frontmatter.path}/`}\n      eyecatcherPath={eyecatcherPath}\n    />\n  )\n}\n"],"names":["MainColumn","_ref","detailPage","React","className","dangerouslySetInnerHTML","__html","html","ContentsHeader","markdownMeta","title","created","eyecatcher","tags","Error","image","getImage","childImageSharp","TagList","GatsbyImage","alt","NextAndPreviousItem","_post$frontmatter","_post$frontmatter2","post","direction","frontmatter","path","Link","to","NextAndPrevious","next","prev","RelatedPostListItem","_post$frontmatter3","key","RelatedPostList","posts","map","p","_p$frontmatter","SideColumn","data","pageContext","console","log","markdownRemark","nodes","currentTags","postsRelatedToTag","filter","node","_node$frontmatter","hasMatchingTag","some","tag","includes","sideColumnClassName","length","Layout","Head","_ref2","_data$markdownRemark","_data$markdownRemark$","_data$markdownRemark2","_data$markdownRemark3","_data$markdownRemark4","_data$markdownRemark5","_data$markdownRemark6","eyecatcherPath","getSrc","SEO"],"sourceRoot":""}