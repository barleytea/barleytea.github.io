{"version":3,"file":"component---src-templates-root-tsx-28accb88cbfffd3e03af.js","mappings":"2MAKO,MAAMA,EAERC,IAAe,IAAd,KAAEC,GAAMD,EACZ,KACGC,EAAKC,aACLD,EAAKC,YAAYC,OACjBF,EAAKC,YAAYE,MACjBH,EAAKC,YAAYG,SACjBJ,EAAKC,YAAYI,YACjBL,EAAKC,YAAYK,MAElB,MAAM,IAAIC,MAAM,gBAGlB,MAAMC,GAAQC,EAAAA,EAAAA,GAAST,EAAKC,YAAYI,WAAWK,iBACnD,IAAKF,EACH,MAAM,IAAID,MAAM,YAGlB,OACEI,EAAAA,cAACC,EAAAA,KAAI,CACHC,GAAK,GAAEb,EAAKC,YAAYE,OACxBW,UAAU,kCAEVH,EAAAA,cAACI,EAAAA,EAAW,CAACP,MAAOA,EAAOQ,IAAI,cAC/BL,EAAAA,cAAA,OAAKG,UAAU,iCACbH,EAAAA,cAAA,OAAKG,UAAU,iBACbH,EAAAA,cAAA,OAAKG,UAAU,iBAAiBd,EAAKC,YAAYC,OACjDS,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAACM,EAAAA,EAAO,CAACX,KAAMN,EAAKC,YAAYK,SAGpCK,EAAAA,cAAA,OAAKG,UAAU,6CACZd,EAAKC,YAAYG,UAGjB,ECtCEc,EAERnB,IAAgB,IAAf,MAAEoB,GAAOpB,EACb,OACEY,EAAAA,cAAA,MAAIG,UAAU,0EACXK,EAAMC,KAAKpB,GACVW,EAAAA,cAAA,MAAIU,IAAKrB,EAAKsB,GAAIR,UAAU,kCAC1BH,EAAAA,cAACb,EAAI,CAACE,KAAMA,OAGb,C,0ICLF,MAAMuB,EAAmCxB,IAGzC,IAH0C,YAC/CyB,EAAW,WACXC,GACD1B,EACC,OACEY,EAAAA,cAAA,MAAIG,UAAU,sDACX,IAAIY,MAAMD,GAAYE,KAAK,GAAGP,KAAI,CAACQ,EAAGC,IAEnClB,EAAAA,cAAA,MACEG,UACEe,EAAM,IAAML,EACP,mEACA,0EAGPb,EAAAA,cAACC,EAAAA,KAAI,CACHC,GAAY,IAARgB,EAAa,IAAM,UAASA,EAAM,IACtCR,IAAKQ,EACLf,UAAU,+DAETe,EAAM,MAKZ,ECzBIC,EAA4C/B,IAAsC,IAArC,WAAEgC,EAAU,gBAAEC,GAAiBjC,EACvF,OACEY,EAAAA,cAAA,OAAKG,UAAU,yBACbH,EAAAA,cAAA,MAAIG,UAAU,uBACZH,EAAAA,cAAA,MAAIG,UAA+B,KAApBkB,EAAyB,YAAc,IACpDrB,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,IAAIC,UAAU,aAAY,QAIpCiB,EAAWX,KAAKa,GACftB,EAAAA,cAAA,MACEU,IAAKY,EACLnB,UAAWmB,IAAaD,EAAkB,YAAc,IAExDrB,EAAAA,cAACC,EAAAA,KAAI,CACHC,GAAK,aAAYoB,EAASC,gBAC1BpB,UAAU,aAETmB,OAKTtB,EAAAA,cAAA,SAAOwB,KAAG,GAAG,khCAuCT,E,cCZV,MApBiEpC,IAA2B,IAA1B,KAAEqC,EAAI,YAAEC,GAAatC,EACrF,MAAM,WAAEgC,EAAU,SAAEE,GAAaI,EAEjC,OACE1B,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAACmB,EAAY,CACXC,WAAYA,EACZC,gBAAiBC,GAAY,KAE/BtB,EAAAA,cAACO,EAAAA,EAAQ,CAACC,MAAOiB,EAAKG,kBAAkBpB,QACxCR,EAAAA,cAAA,OAAKG,UAAU,6BACbH,EAAAA,cAACY,EAAU,CACTE,WAAYY,EAAYZ,WACxBD,YAAaa,EAAYb,eAGtB,EAMN,MAgCMgB,EAAOA,IACX7B,EAAAA,cAAC8B,EAAAA,EAAG,K","sources":["webpack://barleytea.github.io/./src/components/card.tsx","webpack://barleytea.github.io/./src/components/card-list.tsx","webpack://barleytea.github.io/./src/components/pagination.tsx","webpack://barleytea.github.io/./src/components/CategoryTabs.tsx","webpack://barleytea.github.io/./src/templates/root.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\nimport { TagList } from './tag-list'\n\nexport const Card: ComponentType<{\n  node: Queries.PaginationQuery['allMarkdownRemark']['nodes'][number]\n}> = ({ node }) => {\n  if (\n    !node.frontmatter ||\n    !node.frontmatter.title ||\n    !node.frontmatter.path ||\n    !node.frontmatter.created ||\n    !node.frontmatter.eyecatcher ||\n    !node.frontmatter.tags\n  ) {\n    throw new Error('Invalid node')\n  }\n\n  const image = getImage(node.frontmatter.eyecatcher.childImageSharp)\n  if (!image) {\n    throw new Error('No image')\n  }\n\n  return (\n    <Link\n      to={`${node.frontmatter.path}`}\n      className=\"text-[color:var(--text-color)]\"\n    >\n      <GatsbyImage image={image} alt=\"thumbnail\" />\n      <div className=\"flex flex-col justify-between\">\n        <div className=\"break-all p-2\">\n          <div className=\"font-semibold\">{node.frontmatter.title}</div>\n          <div className=\"mt-auto\">\n            <TagList tags={node.frontmatter.tags} />\n          </div>\n        </div>\n        <div className=\"text-sm font-light italic text-right mr-2\">\n          {node.frontmatter.created}\n        </div>\n      </div>\n    </Link>\n  )\n}\n","import { ComponentType } from 'react'\nimport { Card } from './card'\n\nexport const CardList: ComponentType<{\n  nodes: Queries.PaginationQuery['allMarkdownRemark']['nodes']\n}> = ({ nodes }) => {\n  return (\n    <ul className=\"xs:grid-cols-2 grid list-none gap-1 pl-0 sm:grid-cols-2 md:grid-cols-3\">\n      {nodes.map((node) => (\n        <li key={node.id} className=\"rounded border border-gray-500\">\n          <Card node={node} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import { Link } from 'gatsby'\nimport { ComponentType } from 'react'\n\ninterface Props {\n  totalPages: number\n  currentPage: number\n}\n\nexport const Pagination: ComponentType<Props> = ({\n  currentPage,\n  totalPages,\n}) => {\n  return (\n    <ul className=\"flex list-none pl-0 text-[color:var(--text-color)]\">\n      {new Array(totalPages).fill(0).map((_, idx) => {\n        return (\n          <li\n            className={\n              idx + 1 === currentPage\n                ? `border-grey-500 h-12 w-12 border bg-[color:var(--primary-color)]`\n                : `border-grey-500 h-12 w-12 border hover:bg-[color:var(--primary-color)]`\n            }\n          >\n            <Link\n              to={idx === 0 ? `/` : `/posts/${idx + 1}`}\n              key={idx}\n              className=\"flex h-full w-full items-center justify-center align-middle\"\n            >\n              {idx + 1}\n            </Link>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\ninterface CategoryTabsProps {\n  categories: string[]\n  currentCategory: string\n}\n\nexport const CategoryTabs: React.FC<CategoryTabsProps> = ({ categories, currentCategory }) => {\n  return (\n    <div className=\"tabs is-centered mb-6\">\n      <ul className=\"is-flex-wrap-nowrap\">\n        <li className={currentCategory === '' ? 'is-active' : ''}>\n          <Link to=\"/\" className=\"px-6 py-2\">\n            All\n          </Link>\n        </li>\n        {categories.map((category) => (\n          <li\n            key={category}\n            className={category === currentCategory ? 'is-active' : ''}\n          >\n            <Link \n              to={`/category/${category.toLowerCase()}`}\n              className=\"px-6 py-2\"\n            >\n              {category}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <style jsx>{`\n        .tabs ul {\n          border-bottom: none;\n          display: flex;\n          flex-wrap: nowrap;\n          overflow-x: auto;\n          -webkit-overflow-scrolling: touch;\n          -ms-overflow-style: none;\n          scrollbar-width: none;\n          padding: 0.5rem;\n        }\n        .tabs ul::-webkit-scrollbar {\n          display: none;\n        }\n        .tabs li {\n          margin: 0 0.5rem;\n          flex: 0 0 auto;\n        }\n        .tabs li a {\n          border: 1px solid #dbdbdb;\n          border-radius: 20px;\n          color: #888888;\n          transition: all 0.3s ease;\n          white-space: nowrap;\n          font-size: 1.1rem;\n          background-color: white;\n        }\n        .tabs li:hover a {\n          border-color: #3273dc;\n          color: #3273dc;\n          background-color: #f8f9fa;\n        }\n        .tabs li.is-active a {\n          background-color: #3273dc;\n          border-color: #3273dc;\n          color: white;\n          font-weight: bold;\n        }\n      `}</style>\n    </div>\n  )\n} ","import React from 'react'\nimport { graphql, PageProps } from 'gatsby'\nimport { Layout } from '../components/layout'\nimport { CardList } from '../components/card-list'\nimport { Pagination } from '../components/pagination'\nimport { CategoryTabs } from '../components/CategoryTabs'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport SEO from '../components/seo'\n\ninterface RootPageData {\n  allMarkdownRemark: {\n    nodes: Array<{\n      id: string\n      frontmatter: {\n        title: string\n        created: string\n        path: string\n        tags: string[]\n        category: string\n        eyecatcher: {\n          childImageSharp: {\n            gatsbyImageData: IGatsbyImageData\n          }\n        }\n      }\n    }>\n  }\n}\n\ninterface PageContext {\n  limit: number\n  skip: number\n  totalPages: number\n  currentPage: number\n  categories: string[]\n  category?: string\n}\n\nconst RootPage: React.FC<PageProps<RootPageData, PageContext>> = ({ data, pageContext }) => {\n  const { categories, category } = pageContext\n\n  return (\n    <Layout>\n      <CategoryTabs \n        categories={categories} \n        currentCategory={category || ''} \n      />\n      <CardList nodes={data.allMarkdownRemark.nodes} />\n      <div className=\"my-12 flex justify-center\">\n        <Pagination\n          totalPages={pageContext.totalPages}\n          currentPage={pageContext.currentPage}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default RootPage\n\nexport const query = graphql`\n  query RootPage($skip: Int!, $limit: Int!, $category: String) {\n    allMarkdownRemark(\n      sort: { frontmatter: { created: DESC } }\n      limit: $limit\n      skip: $skip\n      filter: { \n        frontmatter: { \n          category: { eq: $category }\n          draft: { ne: true }\n        } \n      }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          created\n          path\n          tags\n          category\n          eyecatcher {\n            childImageSharp {\n              gatsbyImageData(width: 296, height: 296, placeholder: BLURRED)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => {\n  return <SEO />\n}\n"],"names":["Card","_ref","node","frontmatter","title","path","created","eyecatcher","tags","Error","image","getImage","childImageSharp","React","Link","to","className","GatsbyImage","alt","TagList","CardList","nodes","map","key","id","Pagination","currentPage","totalPages","Array","fill","_","idx","CategoryTabs","categories","currentCategory","category","toLowerCase","jsx","data","pageContext","Layout","allMarkdownRemark","Head","SEO"],"sourceRoot":""}