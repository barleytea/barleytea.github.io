{"version":3,"file":"component---src-templates-detail-tsx-fc6a156aab53cdee7b5f.js","mappings":"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","sources":["webpack://barleytea.github.io/./src/components/main-column.tsx","webpack://barleytea.github.io/./src/components/contents-header.tsx","webpack://barleytea.github.io/./src/components/next-previous-item.tsx","webpack://barleytea.github.io/./src/components/next-previous.tsx","webpack://barleytea.github.io/./src/components/related-post-list-item.tsx","webpack://barleytea.github.io/./src/components/related-post-list.tsx","webpack://barleytea.github.io/./src/components/side-column.tsx","webpack://barleytea.github.io/./src/templates/detail.tsx"],"sourcesContent":["import { ComponentType } from 'react'\n\ninterface Props {\n  detailPage: NonNullable<Queries.detailPageQuery['markdownRemark']>\n}\n\nexport const MainColumn: ComponentType<Props> = ({ detailPage }) => {\n  return (\n    <div className=\"text-[color:var(--text-color)]\">\n      <article\n        dangerouslySetInnerHTML={{\n          __html: detailPage.html || '',\n        }}\n        className=\"markdown\"\n      ></article>\n    </div>\n  )\n}\n","import { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\nimport { TagList } from './tag-list'\n\nexport const ContentsHeader: ComponentType<{\n  markdownMeta: NonNullable<\n    Queries.detailPageQuery['markdownRemark']\n  >['frontmatter']\n}> = ({ markdownMeta }) => {\n  if (\n    !markdownMeta ||\n    !markdownMeta.title ||\n    !markdownMeta.created ||\n    !markdownMeta.eyecatcher ||\n    !markdownMeta.tags\n  ) {\n    throw new Error('Invalid node')\n  }\n\n  const image = getImage(markdownMeta.eyecatcher.childImageSharp)\n  if (!image) {\n    throw new Error('No image')\n  }\n\n  return (\n    <div className=\"markdown\">\n      <h1 className=\"break-all\">{markdownMeta.title}</h1>\n      <p className=\"text-sm\">{markdownMeta.created}</p>\n      <TagList tags={markdownMeta.tags} />\n      <GatsbyImage image={image} alt=\"thumbnail\" />\n    </div>\n  )\n}\n","import { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\n\ninterface Props {\n  post:\n    | NonNullable<\n        Queries.nextAndPreviousQuery['allMarkdownRemark']['edges'][number]['next']\n      >\n    | NonNullable<\n        Queries.nextAndPreviousQuery['allMarkdownRemark']['edges'][number]['previous']\n      >\n  direction: 'right' | 'left'\n}\n\nexport const NextAndPreviousItem: ComponentType<Props> = ({\n  post,\n  direction,\n}) => {\n  if (!post.frontmatter?.path || !post.frontmatter?.title) {\n    throw new Error()\n  }\n\n  return (\n    <Link\n      to={post.frontmatter.path}\n      className=\"text-[color:var(--text-color)] hover:bg-[color:var(--primary-color)]\"\n    >\n      <div className=\"flex\">\n        {direction === 'left' ? (\n          <div className=\"h-24 w-56 border border-solid p-3 text-[color:var(--text-color)]\">\n            <span className=\"line-clamp-3 whitespace-pre-wrap break-words text-[color:var(--text-color)]\">\n              {'<<'} {post.frontmatter.title}\n            </span>\n          </div>\n        ) : (\n          <div className=\"h-24 w-56 border border-solid p-3 text-[color:var(--text-color)]\">\n            <span className=\"line-clamp-3 whitespace-pre-wrap break-words text-[color:var(--text-color)]\">\n              {'>>'} {post.frontmatter.title}\n            </span>\n          </div>\n        )}\n      </div>\n    </Link>\n  )\n}\n","import { ComponentType } from 'react'\nimport { NextAndPreviousItem } from './next-previous-item'\n\ninterface NextAndPreviousEdges {\n  next: Queries.nextAndPreviousQuery['allMarkdownRemark']['edges'][number]['next']\n  prev: Queries.nextAndPreviousQuery['allMarkdownRemark']['edges'][number]['previous']\n}\n\nexport const NextAndPrevious: ComponentType<NextAndPreviousEdges> = ({\n  next,\n  prev,\n}) => {\n  return (\n    <div className=\"flex justify-between\">\n      {prev ? (\n        <NextAndPreviousItem post={prev} direction=\"left\" />\n      ) : (\n        <div></div>\n      )}\n      {next ? (\n        <NextAndPreviousItem post={next} direction=\"right\" />\n      ) : (\n        <div></div>\n      )}\n    </div>\n  )\n}\n","import { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\n\ninterface RelatedPostListItemProps {\n  post: Queries.detailPageQuery['tags']['nodes'][number]\n}\n\nexport const RelatedPostListItem: ComponentType<RelatedPostListItemProps> = ({\n  post,\n}) => {\n  if (\n    !post.frontmatter?.path ||\n    !post.frontmatter?.title ||\n    !post.frontmatter?.eyecatcher\n  ) {\n    throw new Error('Invalid node')\n  }\n\n  const image = getImage(post.frontmatter.eyecatcher.childImageSharp)\n  if (!image) {\n    throw new Error('No image')\n  }\n\n  return (\n    <li\n      key={post.frontmatter.path}\n      className=\"border-b-2 border-solid border-[color:var(--text-color)]\"\n    >\n      <Link to={post.frontmatter.path}>\n        <div className=\"flex h-full text-[color:var(--text-color)] hover:bg-[color:var(--text-color)] hover:text-[color:var(--base-color)]\">\n          <GatsbyImage image={image} alt=\"thumbnail\" />\n          <div className=\"w-full break-all px-2 py-1\">\n            <span>{post.frontmatter.title}</span>\n          </div>\n        </div>\n      </Link>\n    </li>\n  )\n}\n","import { ComponentType } from 'react'\nimport { RelatedPostListItem } from './related-post-list-item'\n\ninterface RelatedPostListProps {\n  posts: Queries.detailPageQuery['tags']['nodes']\n}\n\nexport const RelatedPostList: ComponentType<RelatedPostListProps> = ({\n  posts,\n}) => {\n  return (\n    <ul className=\"rounded border-solid border-[color:var(--text-color)] p-0\">\n      {posts.map((p) => (\n        <RelatedPostListItem key={p.frontmatter?.path} post={p} />\n      ))}\n    </ul>\n  )\n}\n","import { ComponentType } from 'react'\nimport { RelatedPostList } from './related-post-list'\n\ninterface Props {\n  tags: Queries.detailPageQuery['tags']['nodes']\n}\n\nexport const SideColumn: ComponentType<Props> = ({ tags }) => {\n  return (\n    <div>\n      <section className=\"mb-12\">\n        <h2 className=\"mb-4 text-xl text-[color:var(--text-color)]\">\n          Related Posts\n        </h2>\n        <RelatedPostList posts={tags} />\n      </section>\n    </div>\n  )\n}\n","import { HeadProps, PageProps, graphql } from 'gatsby'\nimport { DetailPageContext } from '../../gatsby-node'\nimport { Layout } from '../components/layout'\nimport { MainColumn } from '../components/main-column'\nimport { ContentsHeader } from '../components/contents-header'\nimport { NextAndPrevious } from '../components/next-previous'\nimport { SideColumn } from '../components/side-column'\nimport SEO from '../components/seo'\nimport { getSrc } from 'gatsby-plugin-image'\n\nconst RootBlogList = ({\n  data,\n  pageContext,\n}: PageProps<Queries.detailPageQuery, DetailPageContext>) => {\n  console.log(pageContext)\n\n  if (!data.markdownRemark) {\n    throw new Error('MarkdownRemark shouled be provided')\n  }\n\n  return (\n    <Layout>\n      <div className=\"grid gap-y-6\">\n        <ContentsHeader\n          markdownMeta={data.markdownRemark.frontmatter}\n        ></ContentsHeader>\n        <div className=\"grid md:grid-cols-[70%_30%] gap-x-6\">\n          <MainColumn detailPage={data.markdownRemark} />\n          <aside className='invisible md:visible'>\n            <SideColumn tags={data.tags.nodes}></SideColumn>\n          </aside>\n          <section className=\"mt-4\">\n            <NextAndPrevious next={pageContext.next} prev={pageContext.prev} />\n          </section>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default RootBlogList\n\nexport const details = graphql`\n  query detailPage($id: String!, $tags: [String!]) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        path\n        title\n        created\n        tags\n        eyecatcher {\n          childImageSharp {\n            gatsbyImageData(width: 300, height: 300, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n    tags: allMarkdownRemark(\n      filter: { id: { ne: $id }, frontmatter: { tags: { in: $tags } } }\n      limit: 10\n      sort: { frontmatter: { created: DESC } }\n    ) {\n      nodes {\n        frontmatter {\n          path\n          title\n          eyecatcher {\n            childImageSharp {\n              gatsbyImageData(width: 120, height: 90)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const Head = ({ data }: HeadProps<Queries.detailPageQuery>) => {\n  if (\n    !data.markdownRemark?.frontmatter?.title ||\n    !data.markdownRemark?.frontmatter?.created ||\n    !data.markdownRemark?.frontmatter?.eyecatcher?.childImageSharp\n  ) {\n    throw new Error('Insufficient details')\n  }\n\n  const eyecatcherPath = getSrc(\n    data.markdownRemark.frontmatter.eyecatcher.childImageSharp\n  )\n  return (\n    <SEO\n      title={data.markdownRemark.frontmatter.title}\n      path={`${data.markdownRemark.frontmatter.path}/`}\n      eyecatcherPath={eyecatcherPath}\n    />\n  )\n}\n"],"names":["MainColumn","_ref","detailPage","React","className","dangerouslySetInnerHTML","__html","html","ContentsHeader","markdownMeta","title","created","eyecatcher","tags","Error","image","getImage","childImageSharp","TagList","GatsbyImage","alt","NextAndPreviousItem","_post$frontmatter","_post$frontmatter2","post","direction","frontmatter","path","Link","to","NextAndPrevious","next","prev","RelatedPostListItem","_post$frontmatter3","key","RelatedPostList","posts","map","p","_p$frontmatter","SideColumn","data","pageContext","console","log","markdownRemark","Layout","nodes","Head","_ref2","_data$markdownRemark","_data$markdownRemark$","_data$markdownRemark2","_data$markdownRemark3","_data$markdownRemark4","_data$markdownRemark5","_data$markdownRemark6","eyecatcherPath","getSrc","SEO"],"sourceRoot":""}