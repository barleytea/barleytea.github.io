{"version":3,"file":"component---src-templates-root-tsx-92b074453137c6b0b014.js","mappings":"2MAKO,MAAMA,EAERC,IAAe,IAAd,KAAEC,GAAMD,EACZ,KACGC,EAAKC,aACLD,EAAKC,YAAYC,OACjBF,EAAKC,YAAYE,MACjBH,EAAKC,YAAYG,SACjBJ,EAAKC,YAAYI,YACjBL,EAAKC,YAAYK,MAElB,MAAM,IAAIC,MAAM,gBAGlB,MAAMC,GAAQC,EAAAA,EAAAA,GAAST,EAAKC,YAAYI,WAAWK,iBACnD,IAAKF,EACH,MAAM,IAAID,MAAM,YAGlB,OACEI,EAAAA,cAACC,EAAAA,KAAI,CACHC,GAAK,GAAEb,EAAKC,YAAYE,OACxBW,UAAU,kCAEVH,EAAAA,cAACI,EAAAA,EAAW,CAACP,MAAOA,EAAOQ,IAAI,cAC/BL,EAAAA,cAAA,OAAKG,UAAU,iCACbH,EAAAA,cAAA,OAAKG,UAAU,iBACbH,EAAAA,cAAA,OAAKG,UAAU,iBAAiBd,EAAKC,YAAYC,OACjDS,EAAAA,cAAA,OAAKG,UAAU,6BACZd,EAAKC,YAAYG,UAGtBO,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAACM,EAAAA,EAAO,CAACX,KAAMN,EAAKC,YAAYK,SAG/B,ECtCEY,EAERnB,IAAgB,IAAf,MAAEoB,GAAOpB,EACb,OACEY,EAAAA,cAAA,MAAIG,UAAU,yCACXK,EAAMC,KAAKpB,GACVW,EAAAA,cAAA,MAAIU,IAAKrB,EAAKsB,GAAIR,UAAU,kCAC1BH,EAAAA,cAACb,EAAI,CAACE,KAAMA,OAGb,C,0ICLF,MAAMuB,EAAmCxB,IAGzC,IAH0C,YAC/CyB,EAAW,WACXC,GACD1B,EACC,OACEY,EAAAA,cAAA,MAAIG,UAAU,sDACX,IAAIY,MAAMD,GAAYE,KAAK,GAAGP,KAAI,CAACQ,EAAGC,IAEnClB,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAY,IAARgB,EAAa,IAAM,UAASA,EAAM,IAAKR,IAAKQ,GACpDlB,EAAAA,cAAA,MACEG,UACEe,EAAM,IAAML,EACP,iHACA,wHAGNK,EAAM,MAKZ,ECDT,MAvBiB9B,IASX,IATY,KAChB+B,EAAI,YACJC,GAODhC,EACC,OACEY,EAAAA,cAACqB,EAAAA,EAAM,KACLrB,EAAAA,cAACO,EAAAA,EAAQ,CAACC,MAAOW,EAAKG,kBAAkBd,QACxCR,EAAAA,cAAA,OAAKG,UAAU,6BACbH,EAAAA,cAACY,EAAU,CACTE,WAAYM,EAAYN,WACxBD,YAAaO,EAAYP,eAGtB,EAMN,MAyBMU,EAAOA,IAEhBvB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAO,e","sources":["webpack://barleytea.github.io/./src/components/card.tsx","webpack://barleytea.github.io/./src/components/card-list.tsx","webpack://barleytea.github.io/./src/components/pagination.tsx","webpack://barleytea.github.io/./src/templates/root.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ComponentType } from 'react'\nimport { TagList } from './tag-list'\n\nexport const Card: ComponentType<{\n  node: Queries.paginationQuery['allMarkdownRemark']['nodes'][number]\n}> = ({ node }) => {\n  if (\n    !node.frontmatter ||\n    !node.frontmatter.title ||\n    !node.frontmatter.path ||\n    !node.frontmatter.created ||\n    !node.frontmatter.eyecatcher ||\n    !node.frontmatter.tags\n  ) {\n    throw new Error('Invalid node')\n  }\n\n  const image = getImage(node.frontmatter.eyecatcher.childImageSharp)\n  if (!image) {\n    throw new Error('No image')\n  }\n\n  return (\n    <Link\n      to={`${node.frontmatter.path}`}\n      className=\"text-[color:var(--text-color)]\"\n    >\n      <GatsbyImage image={image} alt=\"thumbnail\" />\n      <div className=\"flex flex-col justify-between\">\n        <div className=\"break-all p-2\">\n          <div className=\"font-semibold\">{node.frontmatter.title}</div>\n          <div className=\"text-sm font-light italic\">\n            {node.frontmatter.created}\n          </div>\n        </div>\n        <div className=\"mt-auto\">\n          <TagList tags={node.frontmatter.tags} />\n        </div>\n      </div>\n    </Link>\n  )\n}\n","import { ComponentType } from 'react'\nimport { Card } from './card'\n\nexport const CardList: ComponentType<{\n  nodes: Queries.paginationQuery['allMarkdownRemark']['nodes']\n}> = ({ nodes }) => {\n  return (\n    <ul className=\"grid list-none grid-cols-3 gap-1 pl-0\">\n      {nodes.map((node) => (\n        <li key={node.id} className=\"rounded border border-gray-500\">\n          <Card node={node} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import { Link } from 'gatsby'\nimport { ComponentType } from 'react'\n\ninterface Props {\n  totalPages: number\n  currentPage: number\n}\n\nexport const Pagination: ComponentType<Props> = ({\n  currentPage,\n  totalPages,\n}) => {\n  return (\n    <ul className=\"flex list-none pl-0 text-[color:var(--text-color)]\">\n      {new Array(totalPages).fill(0).map((_, idx) => {\n        return (\n          <Link to={idx === 0 ? `/` : `/posts/${idx + 1}`} key={idx}>\n            <li\n              className={\n                idx + 1 === currentPage\n                  ? `border-grey-500 flex h-12 w-12 items-center justify-center border bg-[color:var(--primary-color)] align-middle`\n                  : `border-grey-500 flex h-12 w-12 items-center justify-center border align-middle hover:bg-[color:var(--primary-color)]`\n              }\n            >\n              {idx + 1}\n            </li>\n          </Link>\n        )\n      })}\n    </ul>\n  )\n}\n","import { graphql, type PageProps } from 'gatsby'\nimport { Layout } from '../components/layout'\nimport { CardList } from '../components/card-list'\nimport { Pagination } from '../components/pagination'\n\nconst PostList = ({\n  data,\n  pageContext,\n}: PageProps<\n  Queries.postsPaginationQuery,\n  Queries.postsPaginationQueryVariables & {\n    totalPages: number\n    currentPage: number\n  }\n>) => {\n  return (\n    <Layout>\n      <CardList nodes={data.allMarkdownRemark.nodes} />\n      <div className=\"my-12 flex justify-center\">\n        <Pagination\n          totalPages={pageContext.totalPages}\n          currentPage={pageContext.currentPage}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default PostList\n\nexport const postsPagination = graphql`\n  query postsPagination($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { frontmatter: { created: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        id\n        frontmatter {\n          path\n          title\n          created\n          tags\n          eyecatcher {\n            childImageSharp {\n              gatsbyImageData(width: 296, height: 296, placeholder: BLURRED)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => {\n  return (\n    <>\n      <title>barlog.tech</title>\n    </>\n  )\n}"],"names":["Card","_ref","node","frontmatter","title","path","created","eyecatcher","tags","Error","image","getImage","childImageSharp","React","Link","to","className","GatsbyImage","alt","TagList","CardList","nodes","map","key","id","Pagination","currentPage","totalPages","Array","fill","_","idx","data","pageContext","Layout","allMarkdownRemark","Head"],"sourceRoot":""}